apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: mongodb
  name: mongodb
  namespace: chmurki
spec:
  serviceName: "mongodb"
  replicas: 1
  selector:
    matchLabels:
      role: database
  template:
    metadata:
      labels:
        role: database
        environment: staging
        replicaset: MainRepSet
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: replicaset
                  operator: In
                  values:
                  - MainRepSet
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      containers:
        - name: mongodb
          image: mongo:latest
          command:
            - mongod
            - "--replSet"
            - MainRepSet
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: database-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=database,environment=staging"
            - name: KUBE_NAMESPACE
              value: "chmurki"
            - name: KUBERNETES_MONGO_SERVICE_NAME
              value: "mongodb"
      volumes:
        - name: database-storage
          persistentVolumeClaim:
            claimName: db-shared-pvc
#  volumeClaimTemplates:
#  - metadata:
#      name: database-storage
#      namespace: chmurki
#    spec:
#      accessModes: [ "ReadWriteMany" ]
#      resources:
#        requests:
#          storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    name: mongodb
  namespace: chmurki
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    role: database
